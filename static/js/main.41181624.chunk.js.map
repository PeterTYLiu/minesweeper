{"version":3,"sources":["components/Tile/Tile.tsx","components/Timer/Timer.tsx","utilities/difficulties.js","components/SettingsPanel/SettingsPanel.tsx","components/Instructions/Instructions.tsx","components/NewRecord/NewRecord.tsx","utilities/floodFill.ts","App.tsx","serviceWorkerRegistration.ts","index.js"],"names":["Tile","tile","floodFill","boardState","setBoardState","loseGame","gameStatus","swipeToChord","chord","swipeToFlag","swept","isMine","minesAround","flagStatus","id","c","r","highlightTilesToChord","chordableTilesIds","find","filter","map","forEach","document","querySelector","classList","add","unhighlightTilesToChord","querySelectorAll","remove","swipeHandler","useSwipeable","onSwiped","newBoardState","TileContents","style","fontWeight","className","position","color","fontSize","paddingBottom","onMouseDown","onTouchStart","e","flagThisTile","setTimeout","target","addEventListener","clearTimeout","onMouseUp","onTouchEnd","onMouseLeave","onDoubleClick","onContextMenu","preventDefault","button","handleContextMenu","onClick","Timer","currentFormat","setNewRecordOpen","setMessage","setOldAndNewRecords","useState","timeElapsed","setTimeElapsed","useEffect","timer","setInterval","Number","toFixed","clearInterval","prevRecordTime","localStorage","getItem","setItem","toString","old","undefined","new","includes","difficulties","easy","name","mineRatio","medium","hard","SettingsPanel","setSwipeToFlag","setMineRatio","setSwipeToChord","numOfRows","setNumOfRows","showPWAHint","a","navigator","getInstalledRelatedApps","installedRelatedApps","length","type","checked","onChange","href","rel","marginTop","opacity","Instructions","defaultOpen","src","alt","onLoad","exclamations","NewRecord","newRecordOpen","oldAndNewRecords","open","recycle","width","textAlign","Object","values","difficulty","Math","floor","random","triggerTile","tilesAround","App","numOfColumns","generateNewBoardState","columns","rows","minePercentage","push","minesToPlace","round","index","boardStateTile","tileAround","defaultBoardState","setDefaultBoardState","setGameStatus","board","setBoard","message","winGame","arrOfIds","setAttribute","t","prepNewGame","tilesToSweep","minesSwept","PreGameTiles","i","innerTile","tileId","startGame","Tiles","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.41181624.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\n// Typescript\r\nimport ITile from \"../../types/tile\";\r\nimport { gameStatuses } from \"../../types/gameStatuses\";\r\nimport { onOff } from \"../../types/settings\";\r\n\r\ninterface TileProps {\r\n  tile: ITile;\r\n  floodFill(triggerTile: ITile, boardState: ITile[]): any;\r\n  boardState: ITile[];\r\n  setBoardState(arg0: ITile[]): any;\r\n  loseGame(arrOfIds: number[]): any;\r\n  gameStatus: gameStatuses;\r\n  chord(triggerTile: ITile, boardState: ITile[]): any;\r\n  swipeToFlag: onOff;\r\n  swipeToChord: onOff;\r\n}\r\n\r\nexport default function Tile({\r\n  tile,\r\n  floodFill,\r\n  boardState,\r\n  setBoardState,\r\n  loseGame,\r\n  gameStatus,\r\n  swipeToChord,\r\n  chord,\r\n  swipeToFlag,\r\n}: TileProps) {\r\n  const { swept, isMine, minesAround, flagStatus, id, c, r } = tile;\r\n\r\n  const handleContextMenu = (e: any) => {\r\n    if (!swept && e.button === 2) {\r\n      const newBoardState = [...boardState];\r\n      newBoardState[id - 1].flagStatus =\r\n        flagStatus === \"flagged\" ? \"unflagged\" : \"flagged\";\r\n      return setBoardState(newBoardState);\r\n    }\r\n    if (swept && !isMine && minesAround) {\r\n      chord(tile, boardState);\r\n    }\r\n  };\r\n\r\n  const handleDoubleClick = () => {\r\n    if (swept && !isMine && minesAround) {\r\n      chord(tile, boardState);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (flagStatus === \"unflagged\" && isMine && gameStatus === \"inGame\")\r\n      return loseGame([id]);\r\n    if (flagStatus === \"unflagged\" && !swept && gameStatus === \"inGame\") {\r\n      const newBoardState = [...boardState];\r\n      newBoardState[id - 1].swept = true;\r\n      if (minesAround === 0 && !isMine) {\r\n        floodFill(newBoardState[id - 1], newBoardState);\r\n      }\r\n      setBoardState(newBoardState);\r\n    }\r\n  };\r\n\r\n  const handleTouchStart = (e: any) => {\r\n    highlightTilesToChord();\r\n\r\n    if (!swept) {\r\n      let flagThisTile = setTimeout(() => {\r\n        const newBoardState = [...boardState];\r\n        newBoardState[id - 1].flagStatus =\r\n          flagStatus === \"flagged\" ? \"unflagged\" : \"flagged\";\r\n        return setBoardState(newBoardState);\r\n      }, 800);\r\n      e.target.addEventListener(\"touchend\", () => {\r\n        clearTimeout(flagThisTile);\r\n      });\r\n    }\r\n  };\r\n\r\n  const highlightTilesToChord = () => {\r\n    if (swept && minesAround) {\r\n      let chordableTilesIds = [\r\n        boardState.find((tile) => tile.r === r && tile.c === c + 1),\r\n        boardState.find((tile) => tile.r === r && tile.c === c - 1),\r\n        boardState.find((tile) => tile.r === r + 1 && tile.c === c),\r\n        boardState.find((tile) => tile.r === r - 1 && tile.c === c),\r\n        boardState.find((tile) => tile.r === r + 1 && tile.c === c + 1),\r\n        boardState.find((tile) => tile.r === r - 1 && tile.c === c - 1),\r\n        boardState.find((tile) => tile.r === r + 1 && tile.c === c - 1),\r\n        boardState.find((tile) => tile.r === r - 1 && tile.c === c + 1),\r\n      ]\r\n        .filter((tile) => !tile?.swept && tile?.flagStatus === \"unflagged\")\r\n        .map((tile) => tile?.id);\r\n      chordableTilesIds.forEach((id) => {\r\n        document.querySelector(`.id-${id}`)?.classList.add(\"hover\");\r\n      });\r\n    }\r\n  };\r\n\r\n  const unhighlightTilesToChord = () => {\r\n    if (swept && minesAround && !isMine) {\r\n      const artificiallyHoveredTiles = document.querySelectorAll(\".hover\");\r\n      artificiallyHoveredTiles.forEach((tile) =>\r\n        tile.classList.remove(\"hover\")\r\n      );\r\n    }\r\n  };\r\n\r\n  const swipeHandler = useSwipeable({\r\n    onSwiped: () => {\r\n      if (swipeToChord === \"on\" && swept && !isMine && minesAround) {\r\n        chord(tile, boardState);\r\n      } else if (swipeToFlag === \"on\" && !swept) {\r\n        const newBoardState = [...boardState];\r\n        newBoardState[id - 1].flagStatus =\r\n          flagStatus === \"flagged\" ? \"unflagged\" : \"flagged\";\r\n        return setBoardState(newBoardState);\r\n      }\r\n    },\r\n  });\r\n\r\n  const TileContents = (\r\n    <>\r\n      {((!swept && gameStatus === \"inGame\") || (swept && isMine)) &&\r\n      flagStatus === \"flagged\" ? (\r\n        <p style={{ fontWeight: \"normal\" }} className={flagStatus}>\r\n          🚩\r\n        </p>\r\n      ) : null}\r\n      {gameStatus !== \"inGame\" && !isMine && flagStatus === \"flagged\" ? (\r\n        <>\r\n          <p style={{ fontWeight: \"normal\" }} className={flagStatus}>\r\n            🚩\r\n          </p>\r\n          <span\r\n            style={{\r\n              position: \"absolute\",\r\n              color: \"white\",\r\n              fontSize: \"2.2rem\",\r\n              paddingBottom: \"2px\",\r\n            }}\r\n          >\r\n            🛇\r\n          </span>\r\n        </>\r\n      ) : null}\r\n      {!swept && flagStatus === \"maybe\" ? <p>❔</p> : null}\r\n      {gameStatus === \"inGame\" ? (\r\n        !isMine && minesAround && swept ? (\r\n          <p>{minesAround}</p>\r\n        ) : null\r\n      ) : isMine ? (\r\n        flagStatus !== \"flagged\" ? (\r\n          gameStatus === \"wonGame\" ? (\r\n            <p>🌼</p>\r\n          ) : (\r\n            <p>💣</p>\r\n          )\r\n        ) : gameStatus === \"wonGame\" ? (\r\n          <p>🌼</p>\r\n        ) : null\r\n      ) : minesAround && swept ? (\r\n        <p>{minesAround}</p>\r\n      ) : null}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div\r\n      onMouseDown={highlightTilesToChord}\r\n      onTouchStart={handleTouchStart}\r\n      onMouseUp={unhighlightTilesToChord}\r\n      onTouchEnd={unhighlightTilesToChord}\r\n      onMouseLeave={unhighlightTilesToChord}\r\n      onDoubleClick={handleDoubleClick}\r\n      {...swipeHandler}\r\n      className={`tile id-${id} ${isMine ? \"mine\" : \"\"} ${\r\n        swept ? \"swept\" : \"\"\r\n      } around-${minesAround}`}\r\n      onContextMenu={(e) => {\r\n        e.preventDefault();\r\n        handleContextMenu(e);\r\n      }}\r\n      onClick={handleClick}\r\n    >\r\n      {TileContents}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\ninterface TimerProps {\r\n  gameStatus: \"preGame\" | \"inGame\" | \"wonGame\" | \"lostGame\";\r\n  currentFormat: string;\r\n  setMessage(message: string): any;\r\n  setNewRecordOpen(foo: boolean): any;\r\n  setOldAndNewRecords(foo: { old: number | undefined; new: number }): any;\r\n}\r\n\r\nexport default function Timer({\r\n  gameStatus,\r\n  currentFormat,\r\n  setMessage,\r\n  setNewRecordOpen,\r\n  setOldAndNewRecords,\r\n}: TimerProps) {\r\n  const [timeElapsed, setTimeElapsed] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (gameStatus === \"inGame\") {\r\n      const timer = setInterval(() => {\r\n        setTimeElapsed(Number((timeElapsed + 0.1).toFixed(1)));\r\n      }, 100);\r\n\r\n      return () => clearInterval(timer);\r\n    }\r\n  }, [gameStatus, timeElapsed]);\r\n\r\n  useEffect(() => {\r\n    if (gameStatus === \"wonGame\") {\r\n      let prevRecordTime = localStorage.getItem(currentFormat);\r\n      if (!prevRecordTime || timeElapsed < Number(prevRecordTime)) {\r\n        localStorage.setItem(currentFormat, timeElapsed.toString());\r\n        setOldAndNewRecords({\r\n          old: prevRecordTime ? Number(prevRecordTime) : undefined,\r\n          new: timeElapsed,\r\n        });\r\n        setNewRecordOpen(true);\r\n      }\r\n    }\r\n    if (gameStatus === \"preGame\") {\r\n      setTimeElapsed(0);\r\n    }\r\n  }, [gameStatus]);\r\n\r\n  return (\r\n    <>\r\n      🕒{\" \"}\r\n      {timeElapsed.toString().includes(\".\")\r\n        ? timeElapsed\r\n        : timeElapsed.toString() + \".0\"}\r\n      s\r\n    </>\r\n  );\r\n}\r\n","const difficulties = {\r\n  easy: { name: \"easy\", mineRatio: 0.1 },\r\n  medium: { name: \"medium\", mineRatio: 0.175 },\r\n  hard: { name: \"hard\", mineRatio: 0.25 },\r\n};\r\nexport default difficulties;\r\n","import React from \"react\";\r\nimport { onOff } from \"../../types/settings\";\r\nimport \"./SettingsPanel.css\";\r\nimport difficulties from \"../../utilities/difficulties\";\r\nimport {\r\n  Root,\r\n  Trigger,\r\n  Overlay,\r\n  Content,\r\n  Title,\r\n  Close,\r\n} from \"@radix-ui/react-dialog\";\r\nimport { Cross2Icon, GearIcon } from \"@radix-ui/react-icons\";\r\n\r\nconst versionAndDate = \"v2.0.6 (11/01/2022)\";\r\n\r\ninterface SettingsPanelProps {\r\n  swipeToFlag: onOff;\r\n  setSwipeToFlag(stf: onOff): any;\r\n  swipeToChord: onOff;\r\n  setSwipeToChord(stc: onOff): any;\r\n  setMineRatio(numOfMines: number): any;\r\n  mineRatio: number;\r\n  numOfRows: number;\r\n  setNumOfRows(rows: number): any;\r\n}\r\n\r\nexport default function SettingsPanel({\r\n  swipeToFlag,\r\n  setSwipeToFlag,\r\n  setMineRatio,\r\n  mineRatio,\r\n  swipeToChord,\r\n  setSwipeToChord,\r\n  numOfRows,\r\n  setNumOfRows,\r\n}: SettingsPanelProps) {\r\n  let showPWAHint = true;\r\n  (async () => {\r\n    let installedRelatedApps = await (\r\n      navigator as any\r\n    ).getInstalledRelatedApps();\r\n    if (await installedRelatedApps.length) showPWAHint = false;\r\n  })();\r\n\r\n  return (\r\n    <Root>\r\n      <Trigger>\r\n        <GearIcon />\r\n      </Trigger>\r\n      <Overlay className=\"modal-overlay\" />\r\n      <Content className=\"modal-body settings-panel\">\r\n        <div className=\"modal-header\">\r\n          <Title className=\"modal-title\">Settings</Title>\r\n          <Close className=\"modal-close\">\r\n            <Cross2Icon />\r\n          </Close>\r\n        </div>\r\n        <hr />\r\n        <div className=\"selector\">\r\n          <div\r\n            className={numOfRows === 17 ? \"selected\" : undefined}\r\n            onClick={() => {\r\n              setNumOfRows(17);\r\n              localStorage.setItem(\"numOfRows\", \"17\");\r\n            }}\r\n          >\r\n            <h3>17{numOfRows === 17 && \" rows\"}</h3>\r\n          </div>\r\n          <div\r\n            className={numOfRows === 18 ? \"selected\" : undefined}\r\n            onClick={() => {\r\n              setNumOfRows(18);\r\n              localStorage.setItem(\"numOfRows\", \"18\");\r\n            }}\r\n          >\r\n            <h3>18{numOfRows === 18 && \" rows\"}</h3>\r\n          </div>\r\n          <div\r\n            className={numOfRows === 19 ? \"selected\" : undefined}\r\n            onClick={() => {\r\n              setNumOfRows(19);\r\n              localStorage.setItem(\"numOfRows\", \"19\");\r\n            }}\r\n          >\r\n            <h3>19{numOfRows === 19 && \" rows\"}</h3>\r\n          </div>\r\n          <div\r\n            className={numOfRows === 20 ? \"selected\" : undefined}\r\n            onClick={() => {\r\n              setNumOfRows(20);\r\n              localStorage.setItem(\"numOfRows\", \"20\");\r\n            }}\r\n          >\r\n            <h3>20{numOfRows === 20 && \" rows\"}</h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"selector\">\r\n          <div\r\n            className={\r\n              mineRatio === difficulties.easy.mineRatio ? \"selected\" : undefined\r\n            }\r\n            onClick={() => {\r\n              setMineRatio(difficulties.easy.mineRatio);\r\n              localStorage.setItem(\r\n                \"mineRatio\",\r\n                difficulties.easy.mineRatio.toString()\r\n              );\r\n            }}\r\n          >\r\n            <h3>Easy</h3>\r\n            <p>10% mines</p>\r\n          </div>\r\n          <div\r\n            className={\r\n              mineRatio === difficulties.medium.mineRatio\r\n                ? \"selected\"\r\n                : undefined\r\n            }\r\n            onClick={() => {\r\n              setMineRatio(difficulties.medium.mineRatio);\r\n              localStorage.setItem(\r\n                \"mineRatio\",\r\n                difficulties.medium.mineRatio.toString()\r\n              );\r\n            }}\r\n          >\r\n            <h3>Medium</h3>\r\n            <p>17% mines</p>\r\n          </div>\r\n          <div\r\n            className={\r\n              mineRatio === difficulties.hard.mineRatio ? \"selected\" : undefined\r\n            }\r\n            onClick={() => {\r\n              setMineRatio(difficulties.hard.mineRatio);\r\n              localStorage.setItem(\r\n                \"mineRatio\",\r\n                difficulties.hard.mineRatio.toString()\r\n              );\r\n            }}\r\n          >\r\n            <h3>Hard</h3>\r\n            <p>25% mines</p>\r\n          </div>\r\n        </div>\r\n        <p>\r\n          Best time on {numOfRows} rows &amp;{\" \"}\r\n          {mineRatio === difficulties.hard.mineRatio && \"hard\"}\r\n          {mineRatio === difficulties.medium.mineRatio && \"medium\"}\r\n          {mineRatio === difficulties.easy.mineRatio && \"easy\"}:{\" \"}\r\n          {localStorage.getItem(`10x${numOfRows}x${mineRatio}m`) ? (\r\n            <strong>\r\n              {localStorage.getItem(`10x${numOfRows}x${mineRatio}m`) + \"s\"}\r\n            </strong>\r\n          ) : (\r\n            \"none\"\r\n          )}\r\n        </p>\r\n        <hr />\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={swipeToFlag === \"off\" ? false : true}\r\n            onChange={() => {\r\n              if (swipeToFlag === \"off\") {\r\n                setSwipeToFlag(\"on\");\r\n                localStorage.setItem(\"swipeToFlag\", \"on\");\r\n              } else {\r\n                setSwipeToFlag(\"off\");\r\n                localStorage.setItem(\"swipeToFlag\", \"off\");\r\n              }\r\n            }}\r\n          />\r\n          <div>\r\n            <h3>Swipe to Flag</h3>\r\n          </div>\r\n        </label>\r\n\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={swipeToChord === \"off\" ? false : true}\r\n            onChange={() => {\r\n              if (swipeToChord === \"off\") {\r\n                setSwipeToChord(\"on\");\r\n                localStorage.setItem(\"swipeToChord\", \"on\");\r\n              } else {\r\n                setSwipeToChord(\"off\");\r\n                localStorage.setItem(\"swipeToChord\", \"off\");\r\n              }\r\n            }}\r\n          />\r\n\r\n          <div>\r\n            <h3>Swipe to Chord</h3>\r\n          </div>\r\n        </label>\r\n        {showPWAHint ? (\r\n          <p>\r\n            Swipe to flag &amp; chord works best when you have installed this{\" \"}\r\n            web app on your device. This will also allow you to play offline.\r\n          </p>\r\n        ) : null}\r\n        <hr />\r\n\r\n        <div>\r\n          <p>\r\n            Made with ❤️ by{\" \"}\r\n            <a\r\n              href=\"https://www.linkedin.com/in/peter-ty-liu/\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              PL\r\n            </a>\r\n          </p>\r\n          <p style={{ fontSize: \"14px\", marginTop: \"14px\" }}>\r\n            Enjoying the game?{\" \"}\r\n            <a target=\"_blank\" href=\"https://www.buymeacoffee.com/PeterLiu\">\r\n              Buy me a cup of coffee\r\n            </a>{\" \"}\r\n            :)\r\n          </p>\r\n          <p style={{ fontSize: \"14px\", opacity: \"0.5\", marginTop: \"14px\" }}>\r\n            {versionAndDate}\r\n          </p>\r\n        </div>\r\n      </Content>\r\n    </Root>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Root,\r\n  Trigger,\r\n  Overlay,\r\n  Content,\r\n  Title,\r\n  Close,\r\n} from \"@radix-ui/react-dialog\";\r\nimport { Cross2Icon, QuestionMarkIcon } from \"@radix-ui/react-icons\";\r\nimport \"./Instructions.css\";\r\n\r\nexport default function Instructions() {\r\n  return (\r\n    <Root\r\n      defaultOpen={localStorage.getItem(\"hasSeenInstructions\") ? false : true}\r\n    >\r\n      <Trigger>\r\n        <QuestionMarkIcon />\r\n      </Trigger>\r\n      <Overlay className=\"modal-overlay\" />\r\n      <Content className=\"modal-body\">\r\n        <div className=\"modal-header\">\r\n          <Title className=\"modal-title\">How to Play</Title>\r\n          <Close className=\"modal-close\">\r\n            <Cross2Icon />\r\n          </Close>\r\n        </div>\r\n        <hr />\r\n        <section className=\"instructions-section\">\r\n          <img src=\"images/click.gif\" alt=\"Sweeping a tile\" />\r\n          <p>\r\n            <strong>Click or tap</strong> a tile to <strong>sweep</strong> it\r\n          </p>\r\n        </section>\r\n        <hr />\r\n        <section className=\"instructions-section\">\r\n          <img src=\"images/flag.gif\" alt=\"Flagging a tile\" />\r\n          <p>\r\n            <strong>Right-click or long-press</strong> an unswept tile to{\" \"}\r\n            <strong>flag</strong> it\r\n          </p>\r\n        </section>\r\n        <hr />\r\n        <section className=\"instructions-section\">\r\n          <img\r\n            onLoad={() => {\r\n              localStorage.setItem(\"hasSeenInstructions\", \"true\");\r\n            }}\r\n            src=\"images/chord.gif\"\r\n            alt=\"Chording a tile\"\r\n          />\r\n          <p>\r\n            <strong>Right-click, double-click, or long-press</strong> a swept\r\n            tile to <strong>chord</strong> it\r\n          </p>\r\n        </section>\r\n        <hr />\r\n        <p>Controls and difficulty can be customized in the settings menu</p>\r\n        <Close className=\"got-it\">Got it!</Close>\r\n      </Content>\r\n    </Root>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./NewRecord.css\";\r\nimport difficulties from \"../../utilities/difficulties\";\r\nimport { Root, Overlay, Content, Title, Close } from \"@radix-ui/react-dialog\";\r\nimport Confetti from \"react-confetti\";\r\n\r\ninterface NewRecordProps {\r\n  newRecordOpen: boolean;\r\n  setNewRecordOpen(foo: boolean): any;\r\n  numOfRows: number;\r\n  mineRatio: number;\r\n  oldAndNewRecords: { old: number | undefined; new: number };\r\n}\r\n\r\nconst exclamations = [\r\n  \"Wow!\",\r\n  \"Amazing!\",\r\n  \"Incredible!\",\r\n  \"Incroyable!\",\r\n  \"Superb!\",\r\n  \"Unbelievable!\",\r\n  \"Tally-ho!\",\r\n  \"Bully!\",\r\n  \"Excellent!\",\r\n  \"Great!\",\r\n  \"Huzzah!\",\r\n  \"Hooray!\",\r\n  \"Yahoo!\",\r\n];\r\n\r\nexport default function NewRecord({\r\n  newRecordOpen,\r\n  setNewRecordOpen,\r\n  numOfRows,\r\n  mineRatio,\r\n  oldAndNewRecords,\r\n}: NewRecordProps) {\r\n  return (\r\n    <Root open={newRecordOpen}>\r\n      <Overlay className=\"modal-overlay\" />\r\n\r\n      <Content className=\"modal-body\">\r\n        <Confetti recycle={false} style={{ width: \"100%\" }} />\r\n        <Title className=\"modal-title\" style={{ textAlign: \"center\" }}>\r\n          New record!\r\n        </Title>\r\n        <h1 style={{ fontWeight: \"normal\", textAlign: \"center\" }}>\r\n          🏆 <strong>{oldAndNewRecords.new}s</strong>\r\n        </h1>\r\n        <p style={{ textAlign: \"center\" }}>\r\n          Previous record for {numOfRows} rows &amp;{\" \"}\r\n          {\r\n            Object.values(difficulties).find(\r\n              (difficulty) => difficulty.mineRatio === mineRatio\r\n            )?.name\r\n          }\r\n          : {oldAndNewRecords.old ? oldAndNewRecords.old + \"s\" : \"none\"}\r\n        </p>\r\n        <Close\r\n          className=\"close-new-record\"\r\n          onClick={() => setNewRecordOpen(false)}\r\n        >\r\n          {exclamations[Math.floor(Math.random() * exclamations.length)]}\r\n        </Close>\r\n      </Content>\r\n    </Root>\r\n  );\r\n}\r\n","import ITile from \"../types/tile\";\r\n\r\nexport default function floodFill(triggerTile: ITile, boardState: ITile[]) {\r\n  const { r, c } = triggerTile;\r\n  let tilesAround = [\r\n    boardState.find((tile) => tile.r === r && tile.c === c + 1),\r\n    boardState.find((tile) => tile.r === r && tile.c === c - 1),\r\n    boardState.find((tile) => tile.r === r + 1 && tile.c === c),\r\n    boardState.find((tile) => tile.r === r - 1 && tile.c === c),\r\n    boardState.find((tile) => tile.r === r + 1 && tile.c === c + 1),\r\n    boardState.find((tile) => tile.r === r - 1 && tile.c === c - 1),\r\n    boardState.find((tile) => tile.r === r + 1 && tile.c === c - 1),\r\n    boardState.find((tile) => tile.r === r - 1 && tile.c === c + 1),\r\n  ].filter(\r\n    (tile) => tile?.id && !tile?.swept && tile.flagStatus === \"unflagged\"\r\n  );\r\n  tilesAround.forEach((tile) => {\r\n    if (tile) boardState[tile.id - 1].swept = true;\r\n    if (tile?.minesAround === 0 && tilesAround.length > 0) {\r\n      floodFill(tile, boardState);\r\n    }\r\n  });\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\n// Components\r\nimport Tile from \"./components/Tile\";\r\nimport Timer from \"./components/Timer\";\r\nimport SettingsPanel from \"./components/SettingsPanel\";\r\nimport Instructions from \"./components/Instructions\";\r\nimport NewRecord from \"./components/NewRecord\";\r\n// Typescript\r\nimport ITile from \"./types/tile\";\r\nimport { gameStatuses } from \"./types/gameStatuses\";\r\nimport { onOff } from \"./types/settings\";\r\n// UTility functions\r\nimport floodFill from \"./utilities/floodFill\";\r\n\r\nfunction App() {\r\n  //defaults\r\n  let defaultNumOfRows = 17;\r\n  let numOfColumns = 10;\r\n  let defaultMineRatio = 0.175;\r\n  // Settings\r\n  const [numOfRows, setNumOfRows] = useState(\r\n    localStorage.getItem(\"numOfRows\")\r\n      ? Number(localStorage.getItem(\"numOfRows\"))\r\n      : defaultNumOfRows\r\n  );\r\n  const [mineRatio, setMineRatio] = useState(\r\n    localStorage.getItem(\"mineRatio\")\r\n      ? Number(localStorage.getItem(\"mineRatio\"))\r\n      : defaultMineRatio\r\n  );\r\n  const [swipeToFlag, setSwipeToFlag] = useState<onOff>(\r\n    localStorage.getItem(\"swipeToFlag\")\r\n      ? (localStorage.getItem(\"swipeToFlag\") as onOff)\r\n      : \"off\"\r\n  );\r\n  const [swipeToChord, setSwipeToChord] = useState<onOff>(\r\n    localStorage.getItem(\"swipeToChord\")\r\n      ? (localStorage.getItem(\"swipeToChord\") as onOff)\r\n      : \"off\"\r\n  );\r\n\r\n  // Utility functions\r\n\r\n  function generateNewBoardState(\r\n    columns = numOfColumns,\r\n    rows = numOfRows,\r\n    minePercentage = mineRatio\r\n  ) {\r\n    let boardState: ITile[] = [];\r\n    for (let r = 1; r <= rows; r++) {\r\n      for (let c = 1; c <= columns; c++) {\r\n        boardState.push({\r\n          c,\r\n          r,\r\n          isMine: false,\r\n          id: c + (r - 1) * columns,\r\n          swept: false,\r\n          flagStatus: \"unflagged\",\r\n          minesAround: 0,\r\n        });\r\n      }\r\n    }\r\n    let minesToPlace = Math.round(columns * rows * minePercentage);\r\n    while (minesToPlace > 0) {\r\n      let index = Math.floor(Math.random() * rows * columns);\r\n      if (!boardState[index].isMine) {\r\n        boardState[index].isMine = true;\r\n        minesToPlace--;\r\n      }\r\n    }\r\n    boardState.forEach((boardStateTile) => {\r\n      let { r, c } = boardStateTile;\r\n      boardStateTile.minesAround = [\r\n        boardState.find((tile) => tile.r === r && tile.c === c + 1),\r\n        boardState.find((tile) => tile.r === r && tile.c === c - 1),\r\n        boardState.find((tile) => tile.r === r + 1 && tile.c === c),\r\n        boardState.find((tile) => tile.r === r - 1 && tile.c === c),\r\n        boardState.find((tile) => tile.r === r + 1 && tile.c === c + 1),\r\n        boardState.find((tile) => tile.r === r - 1 && tile.c === c - 1),\r\n        boardState.find((tile) => tile.r === r + 1 && tile.c === c - 1),\r\n        boardState.find((tile) => tile.r === r - 1 && tile.c === c + 1),\r\n      ].filter((tileAround) => tileAround?.isMine).length;\r\n    });\r\n\r\n    return boardState;\r\n  }\r\n\r\n  // Game state\r\n  const [newRecordOpen, setNewRecordOpen] = useState(false);\r\n  const [oldAndNewRecords, setOldAndNewRecords] = useState<{\r\n    old: number | undefined;\r\n    new: number;\r\n  }>({ old: 0, new: 0 });\r\n  const [defaultBoardState, setDefaultBoardState] = useState(\r\n    generateNewBoardState(numOfColumns, numOfRows, mineRatio)\r\n  );\r\n\r\n  const [gameStatus, setGameStatus] = useState<gameStatuses>(\"preGame\");\r\n  const [board, setBoard] = useState<ITile[]>(defaultBoardState);\r\n  const [message, setMessage] = useState(\r\n    localStorage.getItem(`${numOfColumns}x${numOfRows}x${mineRatio}m`)\r\n      ? `🏆 ${\r\n          localStorage.getItem(`${numOfColumns}x${numOfRows}x${mineRatio}m`) +\r\n          \"s\"\r\n        }`\r\n      : \"🏆 none\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    setMessage(\r\n      localStorage.getItem(`${numOfColumns}x${numOfRows}x${mineRatio}m`)\r\n        ? `🏆 ${\r\n            localStorage.getItem(`${numOfColumns}x${numOfRows}x${mineRatio}m`) +\r\n            \"s\"\r\n          }`\r\n        : \"🏆 none\"\r\n    );\r\n  }, [mineRatio, numOfRows]);\r\n\r\n  // Update initial board when rows change\r\n\r\n  useEffect(() => {\r\n    setDefaultBoardState(generateNewBoardState());\r\n  }, [numOfRows]);\r\n\r\n  // Win the game when all the tiles have been cleared\r\n\r\n  useEffect(() => {\r\n    if (\r\n      gameStatus === \"inGame\" &&\r\n      board.filter((tile) => tile.swept).length ===\r\n        numOfRows * numOfColumns -\r\n          Math.round(numOfColumns * numOfRows * mineRatio)\r\n    )\r\n      winGame();\r\n  }, [board]);\r\n\r\n  // Game functions\r\n\r\n  const startGame = (tileId: number) => {\r\n    let newBoardState = generateNewBoardState();\r\n    while (\r\n      newBoardState[tileId - 1].isMine ||\r\n      newBoardState[tileId - 1].minesAround !== 0\r\n    ) {\r\n      newBoardState = generateNewBoardState();\r\n    }\r\n\r\n    newBoardState[tileId - 1].swept = true;\r\n\r\n    floodFill(newBoardState[tileId - 1], newBoardState);\r\n    setBoard(newBoardState);\r\n    setGameStatus(\"inGame\");\r\n  };\r\n\r\n  const winGame = () => {\r\n    setGameStatus(\"wonGame\");\r\n  };\r\n\r\n  function loseGame(arrOfIds: number[]) {\r\n    setGameStatus(\"lostGame\");\r\n    arrOfIds.forEach((id) => {\r\n      document\r\n        .querySelector(`.id-${id}`)\r\n        ?.setAttribute(\"style\", \"background: #d00\");\r\n    });\r\n    let newBoardState = [...board];\r\n    for (let t = 0; t < newBoardState.length; t++) {\r\n      if (newBoardState[t].isMine) newBoardState[t].swept = true;\r\n    }\r\n    setBoard(newBoardState);\r\n  }\r\n\r\n  const prepNewGame = () => {\r\n    setBoard(defaultBoardState);\r\n    setGameStatus(\"preGame\");\r\n    setMessage(\r\n      localStorage.getItem(`${numOfColumns}x${numOfRows}x${mineRatio}m`)\r\n        ? `🏆 ${\r\n            localStorage.getItem(`${numOfColumns}x${numOfRows}x${mineRatio}m`) +\r\n            \"s\"\r\n          }`\r\n        : \"🏆 none\"\r\n    );\r\n  };\r\n\r\n  const chord = (triggerTile: ITile, boardState: ITile[]) => {\r\n    let newBoardState = [...boardState];\r\n    const { r, c, minesAround } = triggerTile;\r\n\r\n    let numOfAdjacentFlaggedTiles = [\r\n      newBoardState.find((tile) => tile.r === r && tile.c === c + 1),\r\n      newBoardState.find((tile) => tile.r === r && tile.c === c - 1),\r\n      newBoardState.find((tile) => tile.r === r + 1 && tile.c === c),\r\n      newBoardState.find((tile) => tile.r === r - 1 && tile.c === c),\r\n      newBoardState.find((tile) => tile.r === r + 1 && tile.c === c + 1),\r\n      newBoardState.find((tile) => tile.r === r - 1 && tile.c === c - 1),\r\n      newBoardState.find((tile) => tile.r === r + 1 && tile.c === c - 1),\r\n      newBoardState.find((tile) => tile.r === r - 1 && tile.c === c + 1),\r\n    ].filter((tile) => tile?.flagStatus === \"flagged\").length;\r\n\r\n    if (minesAround !== numOfAdjacentFlaggedTiles) return;\r\n\r\n    // Chording is a go-go!\r\n\r\n    let tilesToSweep = [\r\n      newBoardState.find((tile) => tile.r === r && tile.c === c + 1),\r\n      newBoardState.find((tile) => tile.r === r && tile.c === c - 1),\r\n      newBoardState.find((tile) => tile.r === r + 1 && tile.c === c),\r\n      newBoardState.find((tile) => tile.r === r - 1 && tile.c === c),\r\n      newBoardState.find((tile) => tile.r === r + 1 && tile.c === c + 1),\r\n      newBoardState.find((tile) => tile.r === r - 1 && tile.c === c - 1),\r\n      newBoardState.find((tile) => tile.r === r + 1 && tile.c === c - 1),\r\n      newBoardState.find((tile) => tile.r === r - 1 && tile.c === c + 1),\r\n    ].filter((tile) => !tile?.swept && tile?.flagStatus === \"unflagged\");\r\n\r\n    let minesSwept = tilesToSweep\r\n      .filter((tile) => tile?.isMine)\r\n      .map((tile) => tile?.id);\r\n\r\n    if (minesSwept.length) return loseGame(minesSwept as number[]);\r\n\r\n    tilesToSweep.forEach((tile) => {\r\n      if (tile) {\r\n        tile.swept = true;\r\n      }\r\n      if (tile?.minesAround === 0) {\r\n        floodFill(tile, newBoardState);\r\n      }\r\n    });\r\n\r\n    setBoard(newBoardState);\r\n  };\r\n\r\n  // Reset the board if board size changes\r\n\r\n  useEffect(() => {\r\n    prepNewGame();\r\n  }, [numOfRows]);\r\n\r\n  // Board UI\r\n\r\n  const PreGameTiles = defaultBoardState.map((tile, i) => {\r\n    if (tile.c === 1) {\r\n      return (\r\n        <div\r\n          key={`pg-${i}`}\r\n          onContextMenu={(e) => {\r\n            e.preventDefault();\r\n          }}\r\n        >\r\n          {defaultBoardState.map((innerTile) => {\r\n            if (innerTile.r === i / numOfColumns + 1) {\r\n              return (\r\n                <div\r\n                  className=\"tile pre-game\"\r\n                  onClick={() => {\r\n                    startGame(innerTile.id);\r\n                  }}\r\n                  key={`pg-r${innerTile.r}c${innerTile.c}`}\r\n                />\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  });\r\n\r\n  const Tiles = board.map((tile, i) => {\r\n    if (tile.c === 1) {\r\n      return (\r\n        <div key={i}>\r\n          {board.map((innerTile) => {\r\n            if (innerTile.r === i / numOfColumns + 1) {\r\n              return (\r\n                <Tile\r\n                  tile={innerTile}\r\n                  chord={chord}\r\n                  key={`r${innerTile.r}c${innerTile.c}`}\r\n                  boardState={board}\r\n                  setBoardState={setBoard}\r\n                  floodFill={floodFill}\r\n                  loseGame={loseGame}\r\n                  gameStatus={gameStatus}\r\n                  swipeToChord={swipeToChord}\r\n                  swipeToFlag={swipeToFlag}\r\n                />\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <NewRecord\r\n        oldAndNewRecords={oldAndNewRecords}\r\n        numOfRows={numOfRows}\r\n        mineRatio={mineRatio}\r\n        newRecordOpen={newRecordOpen}\r\n        setNewRecordOpen={setNewRecordOpen}\r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"controls\">\r\n          <div className=\"dark-bg\">\r\n            {gameStatus === \"preGame\" ? (\r\n              message\r\n            ) : (\r\n              <Timer\r\n                gameStatus={gameStatus}\r\n                setMessage={setMessage}\r\n                currentFormat={`${numOfColumns}x${numOfRows}x${mineRatio}m`}\r\n                setNewRecordOpen={setNewRecordOpen}\r\n                setOldAndNewRecords={setOldAndNewRecords}\r\n              />\r\n            )}\r\n          </div>\r\n\r\n          {gameStatus === \"wonGame\" && (\r\n            <div className=\"ms-button\" onClick={prepNewGame}>\r\n              {\"😎\"}\r\n            </div>\r\n          )}\r\n          {gameStatus === \"lostGame\" && (\r\n            <div className=\"ms-button\" onClick={prepNewGame}>\r\n              {\"😬\"}\r\n            </div>\r\n          )}\r\n\r\n          <div>\r\n            {gameStatus === \"inGame\" ? (\r\n              <div className=\"dark-bg\">\r\n                {`💣 \r\n              ${\r\n                Math.round(numOfColumns * numOfRows * mineRatio) -\r\n                board.filter((tile) => tile.flagStatus === \"flagged\").length\r\n              }`}\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <Instructions />\r\n                <SettingsPanel\r\n                  swipeToFlag={swipeToFlag}\r\n                  setSwipeToFlag={setSwipeToFlag}\r\n                  swipeToChord={swipeToChord}\r\n                  setSwipeToChord={setSwipeToChord}\r\n                  setMineRatio={setMineRatio}\r\n                  mineRatio={mineRatio}\r\n                  numOfRows={numOfRows}\r\n                  setNumOfRows={setNumOfRows}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div\r\n          onContextMenu={(e) => e.preventDefault()}\r\n          className={`board ${\r\n            (gameStatus === \"lostGame\" || gameStatus === \"wonGame\") &&\r\n            \"postGame\"\r\n          }`}\r\n        >\r\n          {gameStatus === \"preGame\" ? PreGameTiles : Tiles}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App.tsx\";\r\n// import reportWebVitals from \"./reportWebVitals\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\nserviceWorkerRegistration.register();\r\n"],"sourceRoot":""}